{"ast":null,"code":"import apiClient from './axiosConfig';\nexport default {\n  getTasks: async () => {\n    const result = await apiClient.get(`items`);\n    return result.data;\n  },\n  addTask: async name => {\n    const result = await apiClient.post(`items`, {\n      name,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, isComplete) => {\n    await apiClient.put(`items/${id}`, {\n      isComplete\n    }); // PUT request for updating the item's status to complete or incomplete  //TODO: replace with appropriate PUT request method  //TODO: handle the response data and errors  //TODO: add error handling and retry mechanism  //TODO: add logging or monitoring for API requests and responses  //TODO: add rate limiting or throttling for API requests  //TODO: add authentication or authorization for API requests  //TODO: add caching\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    //TODO\n    return {};\n  },\n  deleteTask: async () => {\n    console.log('deleteTask');\n  }\n};","map":{"version":3,"names":["apiClient","getTasks","result","get","data","addTask","name","post","isComplete","setCompleted","id","put","console","log","deleteTask"],"sources":["C:/Users/This User/Documents/מסלול/TodoApi/react/src/service.js"],"sourcesContent":["\nimport apiClient from './axiosConfig';\n\n\nexport default {\n  getTasks: async () => {\n    const result = await apiClient.get(`items`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    const result = await apiClient.post(`items`, {name, isComplete: false})\n    return result.data;\n  },\n\n  setCompleted: async(id, isComplete)=>{\n    await apiClient.put(`items/${id}`, {isComplete})  // PUT request for updating the item's status to complete or incomplete  //TODO: replace with appropriate PUT request method  //TODO: handle the response data and errors  //TODO: add error handling and retry mechanism  //TODO: add logging or monitoring for API requests and responses  //TODO: add rate limiting or throttling for API requests  //TODO: add authentication or authorization for API requests  //TODO: add caching\n    console.log('setCompleted', {id, isComplete})\n    //TODO\n    return {};\n  },\n\n  deleteTask:async()=>{\n    console.log('deleteTask')\n  }\n};\n"],"mappings":"AACA,OAAOA,SAAS,MAAM,eAAe;AAGrC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,OAAO,CAAC;IAC3C,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpB,MAAMJ,MAAM,GAAG,MAAMF,SAAS,CAACO,IAAI,CAAC,OAAO,EAAE;MAACD,IAAI;MAAEE,UAAU,EAAE;IAAK,CAAC,CAAC;IACvE,OAAON,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDK,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEF,UAAU,KAAG;IACnC,MAAMR,SAAS,CAACW,GAAG,CAAC,SAASD,EAAE,EAAE,EAAE;MAACF;IAAU,CAAC,CAAC,EAAE;IAClDI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACH,EAAE;MAAEF;IAAU,CAAC,CAAC;IAC7C;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAEDM,UAAU,EAAC,MAAAA,CAAA,KAAS;IAClBF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}